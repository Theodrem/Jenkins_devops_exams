pipeline {
    environment {
        DOCKER_ID = "the0drem1"
        MOVIE_TAG = "v.${BUILD_ID}.0"
        CAST_TAG = "v.${BUILD_ID}.0"
        BRANCH_NAME = "${GIT_BRANCH}"
    }
    agent any
    stages {
        stage('Docker Build & Push') {
            environment {
                DOCKER_PASS = credentials("DOCKER_HUB_PASS")
            }
            steps {
                script {
                    sh '''
                    export MOVIE_TAG=${MOVIE_TAG}
                    export CAST_TAG=${CAST_TAG}
                    echo "Deleting containers.."
                    docker-compose down || true

                    echo "Docker build..."

                    docker-compose build

                    echo "Connect to DockerHub"
                    docker login -u $DOCKER_ID -p $DOCKER_PASS

                    echo "Push to DockerHub"
                    docker push $DOCKER_ID/jenkins_devops_exams-movie_service:$MOVIE_TAG
                    docker push $DOCKER_ID/jenkins_devops_exams-cast_service:$CAST_TAG
                    '''
                }
            }
        }

        stage('Test Acceptance') {
            steps {
                script {
                    sh '''
                    echo "Running containers..."
                    export MOVIE_TAG=${MOVIE_TAG}
                    export CAST_TAG=${CAST_TAG}
                    docker-compose down || true
                    docker-compose up -d
                    echo "Test api.."
                    sleep 10  
                    curl -v http://localhost:8001/api/v1/movies/
                    curl -v http://localhost:8002/api/v1/casts/docs

                    echo "Cleaning containers..."
                    docker-compose down
                    '''
                }
            }
        }
        stage('Dev deployment ') {
            environment {
                KUBECONFIG = credentials("config")
            }
            steps {
                script {
                    sh '''
                    echo "Deployment movie-app on Dev"

                    echo "Updating image tag Helm"
                    cp charts/values.yaml values.yml
                    sed -i "s+tag:.*+tag: ${MOVIE_TAG}+g" values.yml
                    sed -i "s+targetPort:.*+targetPort: 8001+g" values.yml
                    sed -i "s+repository:.*+repository: the0drem1/jenkins_devops_exams-movie_service+g" values.yml
                    helm upgrade --install movie-app charts --values=values.yml --namespace dev

                    echo "Deployment cast-app on Dev"

                    sed -i "s+tag:.*+tag: ${CAST_TAG}+g" values.yml
                    sed -i "s+targetPort:.*+targetPort: 8002+g" values.yml
                    sed -i "s+repository:.*+repository: the0drem1/jenkins_devops_exams-cast_service+g" values.yml
                    helm upgrade --install cast-app charts --values=values.yml --namespace dev
                    '''
                }
            }
        }
        stage('QA deployment ') {
            environment {
                KUBECONFIG = credentials("config")
            }
            steps {
                script {
                    sh '''
                    echo "Deployment QA.."

                    echo "Deployment movie-app on QA"

                    cp charts/values.yaml values.yml
                    sed -i "s+tag:.*+tag: ${MOVIE_TAG}+g" values.yml
                    sed -i "s+targetPort:.*+targetPort: 8001+g" values.yml
                    sed -i "s+repository:.*+repository: the0drem1/jenkins_devops_exams-movie_service+g" values.yml
                    helm upgrade --install movie-app charts --values=values.yml --namespace qa

                    echo "Deployment cast-app on QA"
                    
                    sed -i "s+tag:.*+tag: ${CAST_TAG}+g" values.yml
                    sed -i "s+targetPort:.*+targetPort: 8002+g" values.yml
                    sed -i "s+repository:.*+repository: the0drem1/jenkins_devops_exams-cast_service+g" values.yml
                    helm upgrade --install cast-app charts --values=values.yml --namespace qa

                    '''
                }
            }
        }
        stage('Staging deployment ') {
            environment {
                KUBECONFIG = credentials("config")
            }
            steps {
                script {
                    sh '''
                    echo "Deployment movie-app on Staging"

                    echo "Updating image tag Helm"
                    cp charts/values.yaml values.yml
                    sed -i "s+tag:.*+tag: ${MOVIE_TAG}+g" values.yml
                    sed -i "s+targetPort:.*+targetPort: 8001+g" values.yml
                    sed -i "s+repository:.*+repository: the0drem1/jenkins_devops_exams-movie_service+g" values.yml
                    echo "Deployment Staging"
                    helm upgrade --install movie-app charts --values=values.yml --namespace staging

                    echo "Deployment cast-app on Staging"

                    sed -i "s+tag:.*+tag: ${CAST_TAG}+g" values.yml
                    sed -i "s+targetPort:.*+targetPort: 8002+g" values.yml
                    sed -i "s+repository:.*+repository: the0drem1/jenkins_devops_exams-cast_service+g" values.yml
                    helm upgrade --install cast-app charts --values=values.yml --namespace staging
                    '''
                }
            }
        }

        stage('Production deployment ') {
            environment {
                KUBECONFIG = credentials("config")
            }
            steps {
                script {
                    if (env.BRANCH_NAME == 'origin/master') {
                        timeout(time: 15, unit: "MINUTES") {
                            input message: 'Valiate deployment to production ?', ok: 'Deploy'
                        }
                        sh '''
                        echo "Deployment movie-app on Production"

                        echo "Updating image tag Helm"
                        cp charts/values.yaml values.yml
                        sed -i "s+tag:.*+tag: lastest+g" values.yml
                        sed -i "s+targetPort:.*+targetPort: 8001+g" values.yml
                        sed -i "s+repository:.*+repository: the0drem1/jenkins_devops_exams-movie_service+g" values.yml

                        echo "Deployment cast-app on Production"
                        helm upgrade --install movie-app charts --values=values.yml --namespace prod
                        sed -i "s+tag:.*+tag: latest+g" values.yml
                        sed -i "s+targetPort:.*+targetPort: 8002+g" values.yml
                        sed -i "s+repository:.*+repository: the0drem1/jenkins_devops_exams-cast_service+g" values.yml
                        helm upgrade --install cast-app charts --values=values.yml --namespace prod
                        '''
                    }
                }
            }
        }
    }
}
